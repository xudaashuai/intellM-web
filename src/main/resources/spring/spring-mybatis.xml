<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:c="http://www.springframework.org/schema/c"  
    xmlns:util="http://www.springframework.org/schema/util"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:ehcache="http://www.springmodules.org/schema/ehcache"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
        http://www.springmodules.org/schema/ehcache http://www.springmodules.org/schema/cache/springmodules-ehcache.xsd"> 
 	
    
    <!-- 引入属性文件 -->  
    <context:property-placeholder location="classpath:db.properties" />  
    
     <!-- 配置数据源,使用c3p0连接池 -->  
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"  destroy-method="close">  
        <property name="driverClass" value="${mytest.jdbc.driver}" />  
        <property name="jdbcUrl" value="${mytest.jdbc.url}" />  
         <property name="user" value="${mytets.jdbc.username}" />  
        <property name="password" value="${mytest.jdbc.password}" />
        <property name="minPoolSize" value="1" />  
        <property name="maxPoolSize" value="20" />  
        <property name="maxIdleTime" value="1800" />  
        <property name="acquireIncrement" value="2" />  
        <property name="maxStatements" value="0" />  
        <property name="initialPoolSize" value="2" />
        <property name="idleConnectionTestPeriod" value="1800" />  
        <property name="acquireRetryAttempts" value="30" />  
        <property name="breakAfterAcquireFailure" value="true" />  
        <property name="testConnectionOnCheckout" value="false" />  
    </bean>  
 
 	 <!-- 配置sqlSessionFactory -->  	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <!-- 加载数据库连接池和数据源 -->
        <property name="dataSource" ref="dataSource" />         
        <!-- 加载mybatis的配置文件mybatis-config.xml --> 
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />  
         <!-- 它表示Mapper文件存放的位置，当我们的Mapper文件跟对应的Mapper接口处于同一位置的时候可以不用指定该属性的值。 --> 
        <!--  <property name="mapperLocations" value="classpath:com/gray/user/entity/mybatis-*.xml" />  -->
    </bean>
    
    <!-- mapper批量扫描，从mapper包中扫描出mapper接口，自动创建代理对象并在spring容器中注册 
             遵循规范：将mapper.java和mapper.xml映射文件名称保持一致，且在一个目录中，自动扫描出来的mapper的bean的id为mapper类名首字母小写
    -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
       <!-- 扫描包路径，多个用逗号隔开 -->
        <property name="basePackage"  value="com.cug.intellM.web.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
    </bean>  
    
   
   <!--  <bean id="sqlSession"  class="org.mybatis.spring.SqlSessionTemplate">     
          <constructor-arg index="0" ref="sqlSessionFactory" />     
          <constructor-arg index="1" value="BATCH" />    
     </bean>  -->   
    
    
 </beans>